function anonymous(data) {
var a,address,b,button,code,dd,dt,em,form,html,i,li,nav,object,ol,option,p,pre,rt,s,script,style,table,th,title,tr,u,ul,tt,col,hr,link,meta,source;a = function(){return __ck.tag('a', arguments);};address = function(){return __ck.tag('address', arguments);};b = function(){return __ck.tag('b', arguments);};button = function(){return __ck.tag('button', arguments);};code = function(){return __ck.tag('code', arguments);};dd = function(){return __ck.tag('dd', arguments);};dt = function(){return __ck.tag('dt', arguments);};em = function(){return __ck.tag('em', arguments);};form = function(){return __ck.tag('form', arguments);};html = function(){return __ck.tag('html', arguments);};i = function(){return __ck.tag('i', arguments);};li = function(){return __ck.tag('li', arguments);};nav = function(){return __ck.tag('nav', arguments);};object = function(){return __ck.tag('object', arguments);};ol = function(){return __ck.tag('ol', arguments);};option = function(){return __ck.tag('option', arguments);};p = function(){return __ck.tag('p', arguments);};pre = function(){return __ck.tag('pre', arguments);};rt = function(){return __ck.tag('rt', arguments);};s = function(){return __ck.tag('s', arguments);};script = function(){return __ck.tag('script', arguments);};style = function(){return __ck.tag('style', arguments);};table = function(){return __ck.tag('table', arguments);};th = function(){return __ck.tag('th', arguments);};title = function(){return __ck.tag('title', arguments);};tr = function(){return __ck.tag('tr', arguments);};u = function(){return __ck.tag('u', arguments);};ul = function(){return __ck.tag('ul', arguments);};tt = function(){return __ck.tag('tt', arguments);};col = function(){return __ck.tag('col', arguments);};hr = function(){return __ck.tag('hr', arguments);};link = function(){return __ck.tag('link', arguments);};meta = function(){return __ck.tag('meta', arguments);};source = function(){return __ck.tag('source', arguments);};var formFor = function(){return (function () {
    var _ref;
    return (_ref = Tower.View.Form2).render.apply(_ref, [__ck].concat(__slice.call(arguments)));
  }).apply(this, arguments);};var tableFor = function(){return (function () {
    var _ref;
    return (_ref = Tower.View.Table).render.apply(_ref, arguments);
  }).apply(this, arguments);};var javascripts = function(){return (function (source) {
    var manifest, path, paths, result, _i, _len;
    if (Tower.env === "production") {
      manifest = Tower.assetManifest;
      source = "" + source + ".js";
      if (manifest[source]) source = manifest[source];
      path = "/javascripts/" + source;
      if (Tower.assetHost) path = "" + Tower.assetHost + path;
      return this.javascriptTag(path);
    } else {
      paths = Tower.assets.javascripts[source];
      result = [];
      for (_i = 0, _len = paths.length; _i < _len; _i++) {
        path = paths[_i];
        result.push(this.javascriptTag("/javascripts" + path + ".js"));
      }
      return result.join("");
    }
  }).apply(this, arguments);};var stylesheets = function(){return (function (source) {
    var manifest, path, paths, result, _i, _len;
    if (Tower.env === "production") {
      manifest = Tower.assetManifest;
      source = "" + source + ".css";
      if (manifest[source]) source = manifest[source];
      path = "/stylesheets/" + source;
      if (Tower.assetHost) path = "" + Tower.assetHost + path;
      return this.stylesheetTag(path);
    } else {
      paths = Tower.assets.stylesheets[source];
      result = [];
      for (_i = 0, _len = paths.length; _i < _len; _i++) {
        path = paths[_i];
        result.push(this.stylesheetTag("/stylesheets" + path + ".css"));
      }
      return result.join("");
    }
  }).apply(this, arguments);};var metaTag = function(){return (function (name, content) {
    return meta({
      name: name,
      content: content
    });
  }).apply(this, arguments);};var snapshotLinkTag = function(){return (function (href) {
    return this.linkTag({
      rel: "imageSrc",
      href: href
    });
  }).apply(this, arguments);};var html4ContentTypeTag = function(){return (function (charset, type) {
    if (charset == null) charset = "UTF-8";
    if (type == null) type = "text/html";
    return this.httpMetaTag("Content-Type", "" + type + "; charset=" + charset);
  }).apply(this, arguments);};var html5ContentTypeTag = function(){return (function (charset) {
    if (charset == null) charset = "UTF-8";
    return meta({
      charset: charset
    });
  }).apply(this, arguments);};var contentTypeTag = function(){return (function (charset) {
    return this.html5ContentTypeTag(charset);
  }).apply(this, arguments);};var searchLinkTag = function(){return (function (href, title) {
    return this.linkTag({
      rel: "search",
      type: "application/opensearchdescription+xml",
      href: href,
      title: title
    });
  }).apply(this, arguments);};var faviconLinkTag = function(){return (function (favicon) {
    if (favicon == null) favicon = "/favicon.ico";
    return this.linkTag({
      rel: "shortcut icon",
      href: favicon,
      type: "image/x-icon"
    });
  }).apply(this, arguments);};var linkTag = function(){return (function (options) {
    if (options == null) options = {};
    return link(options);
  }).apply(this, arguments);};var ieApplicationMetaTags = function(){return (function (title, options) {
    var result;
    if (options == null) options = {};
    result = [];
    result.push(this.metaTag("application-name", title));
    if (options.hasOwnProperty("tooltip")) {
      result.push(this.metaTag("msapplication-tooltip", options.tooltip));
    }
    if (options.hasOwnProperty("url")) {
      result.push(this.metaTag("msapplication-starturl", options.url));
    }
    if (options.hasOwnProperty("width") && options.hasOwnProperty("height")) {
      result.push(this.metaTag("msapplication-window", "width=" + options.width + ";height=" + options.height));
      if (options.hasOwnProperty("color")) {
        result.push(this.metaTag("msapplication-navbutton-color", options.color));
      }
    }
    return result.join("\n");
  }).apply(this, arguments);};var ieTaskMetaTag = function(){return (function (name, path, icon) {
    var content;
    if (icon == null) icon = null;
    content = [];
    content.push("name=" + name);
    content.push("uri=" + path);
    if (icon) content.push("icon-uri=" + icon);
    return this.metaTag("msapplication-task", content.join(";"));
  }).apply(this, arguments);};var appleMetaTags = function(){return (function (options) {
    var result;
    if (options == null) options = {};
    result = [];
    result.push(this.appleViewportMetaTag(options));
    if (options.hasOwnProperty("fullScreen")) {
      result.push(this.appleFullScreenMetaTag(options.fullScreen));
    }
    if (options.hasOwnProperty("mobile")) {
      result.push(this.appleMobileCompatibleMetaTag(options.mobile));
    }
    return result.join();
  }).apply(this, arguments);};var appleViewportMetaTag = function(){return (function (options) {
    var viewport;
    if (options == null) options = {};
    viewport = [];
    if (options.hasOwnProperty("width")) viewport.push("width=" + options.width);
    if (options.hasOwnProperty("height")) {
      viewport.push("height=" + options.height);
    }
    viewport.push("initial-scale=" + (options.scale || 1.0));
    if (options.hasOwnProperty("min")) {
      viewport.push("minimum-scale=" + options.min);
    }
    if (options.hasOwnProperty("max")) {
      viewport.push("maximum-scale=" + options.max);
    }
    if (options.hasOwnProperty("scalable")) {
      viewport.push("user-scalable=" + (this.boolean(options.scalable)));
    }
    return this.metaTag("viewport", viewport.join(", "));
  }).apply(this, arguments);};var appleFullScreenMetaTag = function(){return (function (value) {
    return this.metaTag("apple-touch-fullscreen", this.boolean(value));
  }).apply(this, arguments);};var appleMobileCompatibleMetaTag = function(){return (function (value) {
    return this.metaTag("apple-mobile-web-app-capable", this.boolean(value));
  }).apply(this, arguments);};var appleTouchIconLinkTag = function(){return (function (path, options) {
    var rel;
    if (options == null) options = {};
    rel = ["apple-touch-icon"];
    if (options.hasOwnProperty("size")) {
      rel.push("" + options.size + "x" + options.size);
    }
    if (options.precomposed) rel.push("precomposed");
    return this.linkTag({
      rel: rel.join("-"),
      href: path
    });
  }).apply(this, arguments);};var appleTouchIconLinkTags = function(){return (function () {
    var options, path, result, size, sizes, _i, _len;
    path = arguments[0], sizes = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (typeof sizes[sizes.length - 1] === "object") {
      options = sizes.pop();
    } else {
      options = {};
    }
    result = [];
    for (_i = 0, _len = sizes.length; _i < _len; _i++) {
      size = sizes[_i];
      result.push(this.appleTouchIconLinkTag(path, _.extend({
        size: size
      }, options)));
    }
    return result.join();
  }).apply(this, arguments);};var openGraphMetaTags = function(){return (function (options) {
    var result;
    if (options == null) options = {};
    result = [];
    if (options.title) {
      result.push(this.openGraphMetaTag("og:title", options.title));
    }
    if (options.type) result.push(this.openGraphMetaTag("og:type", options.type));
    if (options.image) {
      result.push(this.openGraphMetaTag("og:image", options.image));
    }
    if (options.site) {
      result.push(this.openGraphMetaTag("og:siteName", options.site));
    }
    if (options.description) {
      result.push(this.openGraphMetaTag("og:description", options.description));
    }
    if (options.email) {
      result.push(this.openGraphMetaTag("og:email", options.email));
    }
    if (options.phone) {
      result.push(this.openGraphMetaTag("og:phoneNumber", options.phone));
    }
    if (options.fax) {
      result.push(this.openGraphMetaTag("og:faxNumber", options.fax));
    }
    if (options.lat) {
      result.push(this.openGraphMetaTag("og:latitude", options.lat));
    }
    if (options.lng) {
      result.push(this.openGraphMetaTag("og:longitude", options.lng));
    }
    if (options.street) {
      result.push(this.openGraphMetaTag("og:street-address", options.street));
    }
    if (options.city) {
      result.push(this.openGraphMetaTag("og:locality", options.city));
    }
    if (options.state) {
      result.push(this.openGraphMetaTag("og:region", options.state));
    }
    if (options.zip) {
      result.push(this.openGraphMetaTag("og:postal-code", options.zip));
    }
    if (options.country) {
      result.push(this.openGraphMetaTag("og:country-name", options.country));
    }
    return result.join("\n");
  }).apply(this, arguments);};var openGraphMetaTag = function(){return (function (property, content) {
    return this.meta({
      property: property,
      content: content
    });
  }).apply(this, arguments);};var __slice = Array.prototype.slice;var __hasProp = Object.prototype.hasOwnProperty;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };var __extends = function(child, parent) {  for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }  function ctor() { this.constructor = child; }  ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype;  return child; };var __indexOf = Array.prototype.indexOf || function(item) {  for (var i = 0, l = this.length; i < l; i++) {    if (this[i] === item) return i;  } return -1; };
    var coffeescript, comment, doctype, h, ie, tag, text, yield, __ck, _ref, _ref2;
    if (data == null) {
      data = {};
    }
    if ((_ref = data.format) == null) {
      data.format = false;
    }
    if ((_ref2 = data.autoescape) == null) {
      data.autoescape = false;
    }
    __ck = {
      buffer: [],
      esc: function(txt) {
        if (data.autoescape) {
          return h(txt);
        } else {
          return String(txt);
        }
      },
      tabs: 0,
      repeat: function(string, count) {
        return Array(count + 1).join(string);
      },
      indent: function() {
        if (data.format) {
          return text(this.repeat('  ', this.tabs));
        }
      },
      tag: function(name, args) {
        var combo, i, _i, _len;
        combo = [name];
        for (_i = 0, _len = args.length; _i < _len; _i++) {
          i = args[_i];
          combo.push(i);
        }
        return tag.apply(data, combo);
      },
      render_idclass: function(str) {
        var c, classes, i, id, _i, _j, _len, _len2, _ref3;
        classes = [];
        _ref3 = str.split('.');
        for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
          i = _ref3[_i];
          if (__indexOf.call(i, '#') >= 0) {
            id = i.replace('#', '');
          } else {
            if (i !== '') {
              classes.push(i);
            }
          }
        }
        if (id) {
          text(" id=\"" + id + "\"");
        }
        if (classes.length > 0) {
          text(" class=\"");
          for (_j = 0, _len2 = classes.length; _j < _len2; _j++) {
            c = classes[_j];
            if (c !== classes[0]) {
              text(' ');
            }
            text(c);
          }
          return text('"');
        }
      },
      render_attrs: function(obj, prefix) {
        var k, v, _results;
        if (prefix == null) {
          prefix = '';
        }
        _results = [];
        for (k in obj) {
          v = obj[k];
          if (typeof v === 'boolean' && v) {
            v = k;
          }
          if (typeof v === 'function') {
            v = "(" + v + ").call(this);";
          }
          _results.push(typeof v === 'object' && !(v instanceof Array) ? this.render_attrs(v, prefix + k + '-') : v ? text(" " + (prefix + k) + "=\"" + (this.esc(v)) + "\"") : void 0);
        }
        return _results;
      },
      render_contents: function(contents) {
        var result;
        switch (typeof contents) {
          case 'string':
          case 'number':
          case 'boolean':
            return text(this.esc(contents));
          case 'function':
            if (data.format) {
              text('\n');
            }
            this.tabs++;
            result = contents.call(data);
            if (typeof result === 'string') {
              this.indent();
              text(this.esc(result));
              if (data.format) {
                text('\n');
              }
            }
            this.tabs--;
            return this.indent();
        }
      },
      render_tag: function(name, idclass, attrs, contents) {
        this.indent();
        text("<" + name);
        if (idclass) {
          this.render_idclass(idclass);
        }
        if (attrs) {
          this.render_attrs(attrs);
        }
        if (__indexOf.call(this.self_closing, name) >= 0) {
          text(' />');
          if (data.format) {
            text('\n');
          }
        } else {
          text('>');
          this.render_contents(contents);
          text("</" + name + ">");
          if (data.format) {
            text('\n');
          }
        }
        return null;
      }
    };
    tag = function() {
      var a, args, attrs, contents, idclass, name, _i, _len;
      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      for (_i = 0, _len = args.length; _i < _len; _i++) {
        a = args[_i];
        switch (typeof a) {
          case 'function':
            contents = a;
            break;
          case 'object':
            attrs = a;
            break;
          case 'number':
          case 'boolean':
            contents = a;
            break;
          case 'string':
            if (args.length === 1) {
              contents = a;
            } else {
              if (a === args[0]) {
                idclass = a;
              } else {
                contents = a;
              }
            }
        }
      }
      return __ck.render_tag(name, idclass, attrs, contents);
    };
    yield = function(f) {
      var old_buffer, temp_buffer;
      temp_buffer = [];
      old_buffer = __ck.buffer;
      __ck.buffer = temp_buffer;
      f();
      __ck.buffer = old_buffer;
      return temp_buffer.join('');
    };
    h = function(txt) {
      return String(txt).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
    };
    doctype = function(type) {
      if (type == null) {
        type = 'default';
      }
      text(__ck.doctypes[type]);
      if (data.format) {
        return text('\n');
      }
    };
    text = function(txt) {
      __ck.buffer.push(String(txt));
      return null;
    };
    comment = function(cmt) {
      text("<!--" + cmt + "-->");
      if (data.format) {
        return text('\n');
      }
    };
    coffeescript = function(param) {
      switch (typeof param) {
        case 'function':
          return script("" + __ck.coffeescript_helpers + "(" + param + ").call(this);");
        case 'string':
          return script({
            type: 'text/coffeescript'
          }, function() {
            return param;
          });
        case 'object':
          param.type = 'text/coffeescript';
          return script(param);
      }
    };
    ie = function(condition, contents) {
      __ck.indent();
      text("<!--[if " + condition + "]>");
      __ck.render_contents(contents);
      text("<![endif]-->");
      if (data.format) {
        return text('\n');
      }
    };
    __ck.doctypes = {"5":"<!DOCTYPE html>","default":"<!DOCTYPE html>","xml":"<?xml version=\"1.0\" encoding=\"utf-8\" ?>","transitional":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">","strict":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">","frameset":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">","1.1":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">","basic":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\" \"http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\">","mobile":"<!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.2//EN\" \"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd\">","ce":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"ce-html-1.0-transitional.dtd\">"};__ck.coffeescript_helpers = "var __slice = Array.prototype.slice;var __hasProp = Object.prototype.hasOwnProperty;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };var __extends = function(child, parent) {  for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }  function ctor() { this.constructor = child; }  ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype;  return child; };var __indexOf = Array.prototype.indexOf || function(item) {  for (var i = 0, l = this.length; i < l; i++) {    if (this[i] === item) return i;  } return -1; };";__ck.self_closing = ["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","basefont","frame"];(function () {
          return formFor(this.user, {
            url: "/users"
          });
        }).call(data);return __ck.buffer.join('');
}